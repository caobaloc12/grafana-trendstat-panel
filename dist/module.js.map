{"version":3,"sources":["../src/module.js"],"names":["getColorForValue","data","value","_","isFinite","i","thresholds","length","colorMap","first","changePercent","oldestValue","latestValue","change","pct","parseFloat","toFixed","$","kbn","TimeSeries","MetricsPanelCtrl","TrendStatCtrl","$scope","$injector","$location","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","nullText","nullPointMode","valueName","valueFontSize","percentFontSize","colorBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","onSparklineColorChange","onSparklineFillChange","addEditorTab","unitFormats","getUnitFormats","subItem","refresh","err","dataList","series","map","seriesHandler","setValues","render","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","options","background","tmp","panelColorIndex","color","newColor","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","error","Error","message","JSON","stringify","lastPoint","last","lastValue","isArray","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","latestPoint","oldestPoint","percentValue","valueFormatted","valueRounded","roundValue","scopedVars","extend","label","scope","elem","attrs","ctrl","$timeout","templateSrv","linkInfo","$panelContainer","find","applyColoringThresholds","valueString","getSpan","className","fontSize","replace","getBigValueHtml","body","pctExplain","range","raw","from","split","pctElement","addSparkline","width","setTimeout","height","plotCanvas","plotCss","position","bottom","left","dynamicHeightMargin","round","css","legend","lines","fill","lineWidth","yaxes","xaxis","mode","min","valueOf","to","grid","hoverable","append","plotSeries","plot","strVale","Number","trim","fullscreen","html","toggleClass","hookupDrilldownLinkTooltip","drilldownTooltip","mouseleave","detach","click","evt","parents","window","open","href","indexOf","location","url","mousemove","e","text","title","place_tt","pageX","pageY","renderingCompleted","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\n// import 'jquery.flot.gauge';\n// import 'app/features/panellinks/link_srv';\nimport './css/trendstat-panel.css!';\n\nimport kbn from 'app/core/utils/kbn';\n// import config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\n\nclass TrendStatCtrl extends MetricsPanelCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location) {\n    super($scope, $injector);\n\n    // Set and populate defaults\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 100,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      format: 'none',\n      nullText: null,\n      nullPointMode: 'connected',\n      valueName: 'current',\n      valueFontSize: '20px',\n      percentFontSize: '16px',\n      thresholds: '',\n      colorBackground: false,\n      colorValue: false,\n      colors: ['#299c46', 'rgba(237, 129, 40, 0.89)', '#d44a3a'],\n      sparkline: {\n        show: false,\n        full: false,\n        lineColor: 'rgb(31, 120, 193)',\n        fillColor: 'rgba(31, 118, 189, 0.18)',\n      },\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.onSparklineColorChange = this.onSparklineColorChange.bind(this);\n    this.onSparklineFillChange = this.onSparklineFillChange.bind(this);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/trendstat-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    const data = {};\n    // if (dataList.length > 0 && dataList[0].type === 'table') {\n    //   this.dataType = 'table';\n    //   const tableData = dataList.map(this.tableHandler.bind(this));\n    //   this.setTableValues(tableData, data);\n    // } else {\n    //   this.dataType = 'timeseries';\n    //   this.series = dataList.map(this.seriesHandler.bind(this));\n    //   this.setValues(data);\n    // }\n\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.setValues(data);\n    this.data = data;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints || [],\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n  /*\n    setTableColumnToSensibleDefault(tableData) {\n      if (this.tableColumnOptions.length === 1) {\n        this.panel.tableColumn = this.tableColumnOptions[0];\n      } else {\n        this.panel.tableColumn = _.find(tableData.columns, col => {\n          return col.type !== 'time';\n        }).text;\n      }\n    }\n\n    setTableValues(tableData, data) {\n      if (!tableData || tableData.length === 0) {\n        return;\n      }\n\n      if (tableData[0].length === 0 || tableData[0][0][this.panel.tableColumn] === undefined) {\n        return;\n      }\n\n      const datapoint = tableData[0][0];\n      data.value = datapoint[this.panel.tableColumn];\n\n      if (_.isString(data.value)) {\n        data.valueFormatted = _.escape(data.value);\n        data.value = 0;\n        data.valueRounded = 0;\n      } else {\n        const decimalInfo = this.getDecimalsForValue(data.value);\n        const formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(\n          datapoint[this.panel.tableColumn],\n          decimalInfo.decimals,\n          decimalInfo.scaledDecimals\n        );\n        data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n      }\n\n      this.setValueMapping(data);\n    } */\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  onColorChange(panelColorIndex) {\n    return color => {\n      this.panel.colors[panelColorIndex] = color;\n      this.render();\n    };\n  }\n\n  onSparklineColorChange(newColor) {\n    this.panel.sparkline.lineColor = newColor;\n    this.render();\n  }\n\n  onSparklineFillChange(newColor) {\n    this.panel.sparkline.fillColor = newColor;\n    this.render();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series.length > 1) {\n      var error = new Error();\n      error.message = 'Multiple Series Error';\n      error.data =\n        'Metric query returns ' +\n        this.series.length +\n        ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n' +\n        JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      let lastPoint = _.last(this.series[0].datapoints);\n      let lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n      data.value = this.series[0].stats[this.panel.valueName];\n      data.flotpairs = this.series[0].flotpairs;\n\n      let decimalInfo = this.getDecimalsForValue(data.value);\n      let formatFunc = kbn.valueFormats[this.panel.format];\n\n      let latestPoint = _.last(this.series[0].datapoints);\n      let oldestPoint = _.first(this.series[0].datapoints);\n      let latestValue = _.isArray(latestPoint) ? latestPoint[0] : null;\n      let oldestValue = _.isArray(oldestPoint) ? oldestPoint[0] : null;\n\n      data.oldestValue = formatFunc(oldestValue, decimalInfo.decimals, decimalInfo.scaledDecimals);;\n      data.percentValue = (latestValue && oldestValue) ? changePercent(oldestValue, latestValue) : 'N/A';\n      data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n      data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars['__name'] = {\n        value: this.series[0].label\n      };\n    }\n    // this.setValueMapping(data);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    // var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.trendstat-panel');\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">' + valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value) {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' + value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"trendstat-panel-value-container\">';\n\n      var value = applyColoringThresholds(data.value, data.valueFormatted);\n      body += getSpan('trendstat-panel-value', panel.valueFontSize, value);\n      \n      var pctExplain = 'It was ' + data.oldestValue + ' last ' + ctrl.range.raw.from.split('-')[1] + ' at this time.';\n      var pctElement = '<a href=\"#\" class=\"trendstat-panel-pct\" style=\"font-size:' + panel.percentFontSize + '\" title=\"'+ pctExplain +'\" >' + data.percentValue + '</a>';\n\n      body += pctElement;\n\n      body += '</div>';\n      return body;\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss = {};\n      plotCss.position = 'absolute';\n      plotCss.bottom = '1px';\n      debugger;\n      \n      if (panel.sparkline.full) {\n        plotCss.left = '0px';\n        plotCss.width = width - 10 + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : Math.round(height / 100) * 15 + 5;\n        plotCss.height = height - dynamicHeightMargin + 'px';\n      } else {\n        plotCss.left = '5px';\n        plotCss.width = width - 10 + 'px';\n        plotCss.height = Math.floor(height * 0.25) + 'px';\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: {\n          show: false\n        },\n        series: {\n          lines: {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: {\n          show: false\n        },\n        xaxis: {\n          show: false,\n          mode: 'time',\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: {\n          hoverable: false,\n          show: false\n        },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor,\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) {\n        return;\n      }\n      data = ctrl.data;\n\n      // get thresholds\n      if (panel.thresholds) {\n        data.thresholds = panel.thresholds.split(',').map(function (strVale) {\n          return Number(strVale.trim());\n        });\n      }\n      data.colorMap = panel.colors;\n\n      var body = getBigValueHtml();\n\n      if (panel.colorBackground) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      // if (panel.gauge.show) {\n      //   addGauge();\n      // }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      // if (panel.links.length > 0) {\n      //   linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      // } else {\n      //   linkInfo = null;\n      // }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n      elem.mouseleave(function () {\n        if (panel.links.length === 0) {\n          return;\n        }\n        $timeout(function () {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function (evt) {\n        if (!linkInfo) {\n          return;\n        }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) {\n          return;\n        }\n\n        if (linkInfo.target === '_blank') {\n          window.open(linkInfo.href, '_blank');\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function () {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function (e) {\n        if (!linkInfo) {\n          return;\n        }\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY - 50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function () {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n}\n\nfunction getColorForValue(data, value) {\n  if (!_.isFinite(value)) {\n    return null;\n  }\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nfunction changePercent(oldestValue, latestValue) {\n  var change = latestValue - oldestValue;\n  var pct = parseFloat(100 * (latestValue - oldestValue) / oldestValue).toFixed(1);\n  pct = pct > 0 ? '+' + pct : pct;\n  return pct + '%';\n}\n\nexport {\n  TrendStatCtrl,\n  TrendStatCtrl as PanelCtrl,\n  getColorForValue\n};\n\nTrendStatCtrl.templateUrl = 'module.html';\n"]}